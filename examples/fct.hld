fn fct(n) := n <= 0 ? 1 : n * fct(n - 1);

#pre x >= 0
#post result == fct(x)
proc calc_fct_iter(x) {
    y := 1;
    z := 0;
    #invariant z >= 0 && fct(z) == y
    #variant x - z
    while z != x {
        z := z + 1;
        y := y * z;
    }
    return y;
}

#pre x >= 0
#post result == fct(x)
#variant x
proc calc_fct_rec(x) {
  if x == 0 {
    return 1;
  } else {
    y := calc_fct_rec(x-1);
    return x * y;
  }
}
